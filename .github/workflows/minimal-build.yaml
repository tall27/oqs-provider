name: Minimal Windows Build (Cached)
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: win64

      # üöÄ CACHING ENABLED HERE
      - name: Cache Chocolatey packages
        uses: actions/cache@v4
        with:
          path: |
            C:\ProgramData\chocolatey
            C:\Program Files\OpenSSL
            C:\tools\ninja
          key: ${{ runner.os }}-choco-deps-v2
          restore-keys: |
            ${{ runner.os }}-choco-

      # üéØ SMART INSTALLATION (only if not cached)
      - name: Install dependencies via Chocolatey
        run: |
          # Install OpenSSL if not present
          if (-not (Get-Command openssl -ErrorAction SilentlyContinue)) {
            Write-Host "Installing OpenSSL via Chocolatey..."
            choco install openssl --quiet --yes
            refreshenv
          } else {
            Write-Host "‚úÖ OpenSSL found"
          }
          
          # Install Ninja if not present
          if (-not (Test-Path "C:\tools\ninja\ninja.exe")) {
            Write-Host "Installing Ninja via Chocolatey..."
            choco install ninja --quiet --yes
          } else {
            Write-Host "‚úÖ Ninja found in cache"
          }
          
          # Auto-detect OpenSSL location
          $openssl_paths = @(
            "C:\Program Files\OpenSSL",
            "C:\Program Files\OpenSSL-Win64", 
            "C:\OpenSSL",
            "C:\OpenSSL-Win64"
          )
          
          foreach ($path in $openssl_paths) {
            if (Test-Path "$path\bin\openssl.exe") {
              Write-Host "Found OpenSSL at: $path"
              echo "OPENSSL_ROOT_DIR=$path" >> $env:GITHUB_ENV
              break
            }
          }

      - name: Verify OpenSSL installation
        run: |
          Write-Host "OpenSSL location: $env:OPENSSL_ROOT_DIR"
          if (Test-Path "$env:OPENSSL_ROOT_DIR\bin\openssl.exe") {
            & "$env:OPENSSL_ROOT_DIR\bin\openssl.exe" version
            Write-Host "‚úÖ OpenSSL verified"
          } else {
            Write-Host "‚ùå OpenSSL not found"
            exit 1
          }

      - name: Build OQS Provider
        run: |
          mkdir build
          cd build
          cmake -GNinja `
            -DCMAKE_BUILD_TYPE=Release `
            -DOQS_MINIMAL_BUILD=ON `
            -DBUILD_SHARED_LIBS=OFF `
            -DBUILD_TESTING=OFF `
            -DOPENSSL_ROOT_DIR="$env:OPENSSL_ROOT_DIR" `
            ..
          ninja oqsprov

      - name: Create Artifact Directory
        run: |
          mkdir artifacts
          Copy-Item "build\oqsprov\oqsprov.dll" -Destination "artifacts\"

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: oqs-provider-windows-minimal
          path: artifacts\
          retention-days: 7
