name: Minimal Windows Build (Cached)
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: win64

      - name: Cache build dependencies
        uses: actions/cache@v4
        with:
          path: |
            C:\ProgramData\chocolatey
            C:\Program Files\OpenSSL-Win64
            C:\tools\ninja
          key: ${{ runner.os }}-build-deps-${{ hashFiles('.github/workflows/*.yml') }}-v1
          restore-keys: |
            ${{ runner.os }}-build-deps-

      - name: Install dependencies (if not cached)
        run: |
          if (-not (Test-Path "C:\Program Files\OpenSSL-Win64\bin\openssl.exe")) {
            Write-Host "Installing OpenSSL..."
            choco install openssl --quiet --yes
          } else {
            Write-Host "✅ OpenSSL found in cache"
          }
          
          if (-not (Test-Path "C:\tools\ninja\ninja.exe")) {
            Write-Host "Installing Ninja..."
            choco install ninja --quiet --yes
          } else {
            Write-Host "✅ Ninja found in cache"
          }
          
          echo "OPENSSL_ROOT_DIR=C:\Program Files\OpenSSL-Win64" >> $env:GITHUB_ENV

      - name: Build OQS Provider
        run: |
          mkdir build
          cd build
          cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DOQS_MINIMAL_BUILD=ON -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF -DOPENSSL_ROOT_DIR="$env:OPENSSL_ROOT_DIR" ..
          ninja oqsprov

      - name: Create Artifact Directory
        run: |
          mkdir artifacts
          Copy-Item "build\oqsprov\oqsprov.dll" -Destination "artifacts\"

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: oqs-provider-windows-minimal
          path: artifacts\
          retention-days: 7
