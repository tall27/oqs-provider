name: Windows tests

on: [pull_request, push]

permissions:
  contents: read

jobs:
  coding_style_tests:
    uses: ./.github/workflows/coding_style.yml

  msvc:
    strategy:
      matrix:
        os:
          - windows-2022
        platform:
          - arch: win64
            oqsconfig: -DOQS_ALGS_ENABLED=STD
            osslconfig: no-shared no-fips VC-WIN64A
    runs-on: ${{matrix.os}}
    needs: [coding_style_tests]
    steps:
      - name: Restore OpenSSL32 cache
        id: cache-openssl32
        uses: actions/cache@v4
        with:
          path: c:\openssl32
          key: ${{ runner.os }}-msvcopenssl32
      - uses: actions/checkout@v4
      - name: Checkout OpenSSL master
        if: steps.cache-openssl32.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          set-safe-directory: true
          repository: openssl/openssl
          path: openssl
      - uses: actions/checkout@v4
        with:
          set-safe-directory: true
          repository: open-quantum-safe/liboqs
          ref: main
          path: liboqs
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.platform.arch }}
      - name: Setup nasm for OpenSSL build
        uses: ilammy/setup-nasm@v1
        if: steps.cache-openssl32.outputs.cache-hit != 'true'
        with:
          platform: ${{ matrix.platform.arch }}
      - name: Setup perl for OpenSSl build
        uses: shogo82148/actions-setup-perl@v1
        if: steps.cache-openssl32.outputs.cache-hit != 'true'
      - name: build liboqs
        run: |
          cmake --version
          mkdir build
          cd build
          cmake -GNinja -DCMAKE_C_COMPILER="cl" -DCMAKE_C_FLAGS="/wd5105" -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX="c:\liboqs" ${{ matrix.platform.oqsconfig }} -DOQS_DIST_BUILD=ON ..
          ninja
          ninja install
        working-directory: liboqs
      - name: prepare the OpenSSL build directory
        if: steps.cache-openssl32.outputs.cache-hit != 'true'
        run: mkdir _build
        working-directory: openssl
      - name: OpenSSL config
        if: steps.cache-openssl32.outputs.cache-hit != 'true'
        working-directory: openssl\_build
        run: |
          perl ..\Configure --banner=Configured --prefix=c:\openssl32 no-makedepend ${{ matrix.platform.osslconfig }}
          perl configdata.pm --dump
      - name: OpenSSL build
        if: steps.cache-openssl32.outputs.cache-hit != 'true'
        working-directory: openssl\_build
        run: nmake /S
      - name: OpenSSL install
        if: steps.cache-openssl32.outputs.cache-hit != 'true'
        run: |
          mkdir c:\openssl32
          nmake install_sw
        working-directory: openssl\_build
      - name: Save OpenSSL
        id: cache-openssl-save
        if: steps.cache-openssl32.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            c:\openssl32
          key: ${{ runner.os }}-msvcopenssl32
      - name: build oqs-provider
        run: |
          cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER="cl" -DCMAKE_C_FLAGS="/wd5105" -DOPENSSL_ROOT_DIR="c:\openssl32" -Dliboqs_DIR="c:\liboqs\lib\cmake\liboqs" -S . -B _build
          cd _build
          ninja
      - name: Run tests
        run: |
          ctest -V --test-dir _build

      # ----------- Artifact: Only the DLL -----------
      - name: Upload oqsprovider.dll
        uses: actions/upload-artifact@v4
        with:
          name: oqsprovider.dll
          path: D:/a/oqs-provider/oqs-provider/_build/lib/oqsprovider.dll
