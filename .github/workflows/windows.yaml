name: Windows tests

on: [pull_request, push]

permissions:
  contents: read

jobs:
  msvc:
    strategy:
      matrix:
        os:
          - windows-2022
        platform:
          - arch: win64
            oqsconfig: -DOQS_ALGS_ENABLED=STD
            osslconfig: no-shared no-fips VC-WIN64A
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - name: Checkout OpenSSL master
        uses: actions/checkout@v4
        with:
          repository: openssl/openssl
          path: openssl
      - uses: actions/checkout@v4
        with:
          repository: open-quantum-safe/liboqs
          ref: main
          path: liboqs
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.platform.arch }}
      - name: Setup nasm
        uses: ilammy/setup-nasm@v1
        with:
          platform: ${{ matrix.platform.arch }}
      - name: Setup perl
        uses: shogo82148/actions-setup-perl@v1
      - name: Install Ninja
        run: choco install ninja
      - name: build liboqs
        run: |
          cmake --version
          mkdir build
          cd build
          cmake -GNinja -DCMAKE_C_COMPILER="cl" -DCMAKE_C_FLAGS="/wd5105" -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX="c:\liboqs" ${{ matrix.platform.oqsconfig }} -DOQS_DIST_BUILD=ON ..
          ninja
          ninja install
        working-directory: liboqs
      - name: prepare the OpenSSL build directory
        run: mkdir _build
        working-directory: openssl
      - name: OpenSSL config
        working-directory: openssl\_build
        run: |
          perl ..\Configure --banner=Configured --prefix=c:\openssl32 no-makedepend ${{ matrix.platform.osslconfig }}
          perl configdata.pm --dump
      - name: OpenSSL build
        working-directory: openssl\_build
        run: nmake /S
      - name: OpenSSL install
        run: |
          mkdir c:\openssl32
          cd openssl\_build
          nmake install_sw
